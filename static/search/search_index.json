{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to RISTEK WIKI!","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Engineering/Deployments/","title":"Deployment Strategy","text":"<p>RISTEK services are deployed across multiple targets with various methods depending on what and where we're deploying. For the most part though, our primary deployment methods are</p> <ul> <li>Central Infra for services deployed on VPS servers.</li> <li>Vercel for simpler projects such as this wiki.</li> </ul>"},{"location":"Engineering/Deployments/Central-Infra/","title":"Overview","text":"<p>Central Infra is a repository that contains all the deployment configurations for various services on RISTEK through VPS deployments. This is done to simplify and streamline deployments in order to make it easier, faster, and less dependent on any particular provider. It is also self-documenting which is a plus.</p> <p></p>"},{"location":"Projects/Summerfest/summerfest-v2/","title":"Summerfest V2 Frontend","text":"<p>This is a Next.js project bootstrapped with <code>create-next-app</code>.</p>"},{"location":"Projects/Summerfest/summerfest-v2/#getting-started","title":"Getting Started","text":"<p>First, run the development server:</p> <pre><code>npm run dev\n# or\nyarn dev\n# or\npnpm dev\n</code></pre> <p>Open http://localhost:3000 with your browser to see the result.</p> <p>You can start editing the page by modifying <code>pages/index.tsx</code>. The page auto-updates as you edit the file.</p> <p>API routes can be accessed on http://localhost:3000/api/hello. This endpoint can be edited in <code>pages/api/hello.ts</code>.</p> <p>The <code>pages/api</code> directory is mapped to <code>/api/*</code>. Files in this directory are treated as API routes instead of React pages.</p> <p>This project uses <code>next/font</code> to automatically optimize and load Inter, a custom Google Font.</p>"},{"location":"Projects/Summerfest/summerfest-v2/#learn-more","title":"Learn More","text":"<p>To learn more about Next.js, take a look at the following resources:</p> <ul> <li>Next.js Documentation - learn about Next.js features and API.</li> <li>Learn Next.js - an interactive Next.js tutorial.</li> </ul> <p>You can check out the Next.js GitHub repository - your feedback and contributions are welcome!</p>"},{"location":"Projects/Summerfest/summerfest-v2/#deploy-on-vercel","title":"Deploy on Vercel","text":"<p>The easiest way to deploy your Next.js app is to use the Vercel Platform from the creators of Next.js.</p> <p>Check out our Next.js deployment documentation for more details.</p>"},{"location":"Projects/UlasKelas/ulas-kelas-backend/","title":"UlasKelas Backend","text":"<p>Final Project's Backend of Mobile Development SIG 2021 using Django Rest Framework.</p>"},{"location":"Projects/UlasKelas/ulas-kelas-backend/#database-schema","title":"Database Schema","text":"<p>Database schema to as a guidance to data that will be used in this project</p> <p></p>"},{"location":"Projects/UlasKelas/ulas-kelas-backend/#getting-started","title":"Getting Started","text":""},{"location":"Projects/UlasKelas/ulas-kelas-backend/#move-to-backend-directory","title":"Move to backend directory","text":"<pre><code>cd backend\n</code></pre>"},{"location":"Projects/UlasKelas/ulas-kelas-backend/#create-virtual-environment","title":"Create virtual environment","text":"<pre><code>python3 -m venv env\n\n# Activate virtual environment\nsource env/bin/activate\n\n# How to Deactivate\ndeactivate\n</code></pre>"},{"location":"Projects/UlasKelas/ulas-kelas-backend/#run-app-dev","title":"Run app dev","text":"<ol> <li> <p>duplicate ./UlasKelas/.env.sample and rename to .env</p> </li> <li> <p>run postgres db</p> </li> </ol> <pre><code>docker-compose up -d\n</code></pre> <ol> <li>activate env and install requirement</li> </ol> <pre><code>source env/bin/activate\npip install -r requirements.txt\n</code></pre> <ol> <li>run project</li> </ol> <pre><code>python manage.py runserver\n</code></pre>"},{"location":"Projects/UlasKelas/ulas-kelas-backend/#run-app-prod","title":"Run app prod","text":"<pre><code>docker-compose -f docker-compose-prod.yml up -d\n</code></pre> <p>if you make code changes, run this command</p> <pre><code>docker-compose -f docker-compose-prod.yml down &amp;&amp; sudo docker-compose -f docker-compose-prod.yml build &amp;&amp; docker-compose -f docker-compose-prod.yml up -d\n</code></pre>"},{"location":"Projects/UlasKelas/ulas-kelas-backend/#create-or-update-database-dev","title":"Create or update database dev","text":"<p>before migrate db, make sure ulas-pg container running</p> <ol> <li> <p>change or add the related models</p> </li> <li> <p>make migrations file &amp;&amp; migrate database</p> </li> </ol> <pre><code>python manage.py makemigrations\npython manage.py migrate\n</code></pre>"},{"location":"Projects/UlasKelas/ulas-kelas-backend/#create-or-update-database-prod","title":"Create or update database prod","text":"<ol> <li> <p>change or add the related models</p> </li> <li> <p>make migrations file make sure change pg host to localhost in settings.py before makemigrations</p> </li> </ol> <pre><code>python manage.py makemigrations\n</code></pre> <p>change host to postgres again</p> <ol> <li>migrate database before migrate db, make sure ulas-pg container running</li> </ol> <pre><code>docker exec -it ulas-server python manage.py migrate\n</code></pre>"},{"location":"Projects/UlasKelas/ulas-kelas-backend/#access-db","title":"Access db","text":"<pre><code>docker exec -it ulas-pg bash\npsql -U postgres\n</code></pre> <p>or use database management and input credentials provided in settings.py</p> <p>Now you can login with superuser you just create on https://localhost:8000 and interact with API view OR call the API endpoint with cURL or Postman.</p>"},{"location":"Projects/UlasKelas/ulas-kelas-backend/#sunjad-endpoint-used","title":"Sunjad Endpoint Used","text":"<p>Sunjad all courses mock servers https://3e081de5-8b4c-46ea-8736-99476c47204b.mock.pstmn.io/courses </p>"},{"location":"Projects/UlasKelas/ulas-kelas-backend/#documentation-from-2020","title":"Documentation from 2020","text":""},{"location":"Projects/UlasKelas/ulas-kelas-backend/#authentication","title":"Authentication","text":"<p>Send POST request to <code>/login/</code>. This endpoint will redirect user to SSO Login page. If login success, login page will be directed to <code>/token/</code> endpoint where you can retrieve token and username in its URL parameters.</p> <p>Example:</p> <pre><code>{BACKEND_ROOT_URL}/token?token=f039021efcvery-long-tokencbe90717daded39&amp;username=dummy.dumdum\n</code></pre> <p>This token will be used in authorization header as token authorization. Set <code>Token {very-long-token}</code> as value of <code>Authorization</code> on the headers of every endpoint that need authorization.</p> <p>Example:</p> <pre><code>curl {BACKEND_ROOT_URL}/any-restricted-endpoint/\n    -H \"Accept: application/json\"\n    -H \"Authorization: Token f039021efcvery-long-tokencbe90717daded39\"\n</code></pre>"}]}